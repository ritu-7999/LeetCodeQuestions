class Solution {
    public boolean isPalindrome(String s){
    int l=0;
    int r=s.length()-1;
    while(l<=r){
        if(s.charAt(l)!=s.charAt(r)){
return false;
        }
    
        l++;
        r--;
    }
    return true;
    }
    public void part(String s, List<List<String>>a, List<String>l) {
        if(s== null || s.length()==0){
            a.add(new ArrayList<>(l));
            return ;
        }
        for(int i=0;i<s.length();i++){
      String left=s.substring(0,i+1);
      if(isPalindrome(left)){
          l.add(left);
          part(s.substring(i+1,s.length()),a,l);
          l.remove(l.size()-1);
      }
        }
       
    }
    public List<List<String>> partition(String s){
        if(s == null || s.length() == 0) return new ArrayList<>();
List<List<String>>a=new ArrayList<>();
List<String>l=new ArrayList<>();
part(s,a,l);
return a;

    }
}
