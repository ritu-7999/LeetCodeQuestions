class Solution {
    public int maxSubarraySumCircular(int[] nums) {
      int size = nums.length;
      int max_straight_SUM =Integer.MIN_VALUE;
        int min_straight_SUM = Integer.MAX_VALUE;
        int array_SUM = 0;
        
        int temp_maxSUM = 0;
        int temp_minSUM = 0;
 
        for (int i = 0; i < size; ++i) {
            array_SUM+=nums[i];
            temp_maxSUM+=nums[i];
            if(max_straight_SUM<temp_maxSUM){
                max_straight_SUM=temp_maxSUM;
            }
            temp_maxSUM = temp_maxSUM<0?0:temp_maxSUM;
              temp_minSUM+=nums[i];
               temp_minSUM = temp_minSUM>0?0:temp_minSUM;
        
            if(min_straight_SUM>temp_minSUM){
                min_straight_SUM=temp_minSUM;
            }
            
        }
        if(array_SUM==min_straight_SUM)
            return max_straight_SUM;
        return Math.max(max_straight_SUM,(array_SUM-min_straight_SUM));
        }
           
}
